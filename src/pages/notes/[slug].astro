---
import '@/styles/notes.css';
import type { GetStaticPaths, InferGetStaticPropsType } from 'astro';
import { getPosts } from '@/lib/note';
import Layout from '@/layouts/Layout.astro';
import PostHeader from '@/components/post/post-header.astro';
import PostToc from '@/components/post/post-toc.tsx';
import { getMetaData } from '@/lib/utils';

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

export const getStaticPaths = (async () => {
  const posts = await getPosts();

  return posts.flatMap(post => ({
    params: {
      slug: post.slug
    },
    props: { post }
  }));
}) satisfies GetStaticPaths;

const { post } = Astro.props;
const metadata = getMetaData({
  title: post.title,
  description: post.excerpt
});
---

<Layout metadata={metadata}>
  <main>
    <PostHeader post={post} />
    <article class="notes-body prose mx-auto !max-w-screen-lg px-4 py-10 prose-headings:scroll-mt-20">
      <post.Content />
      <div id="giscus-comment"></div>
    </article>
    <PostToc tocs={post.headings} client:only="react" />

    <script is:inline data-astro-rerun>
      function onLoadMedium() {
        if (typeof mediumZoom !== 'undefined') {
          mediumZoom(document.querySelectorAll('.notes-body img'), {
            margin: 25,
            background: 'rgb(var(--ctp-base))'
          });
        }
      }

      function onLoadMermaid() {
        if (typeof mediumZoom !== 'undefined') {
          mermaid.initialize({
            startOnLoad: true,
            theme: 'default',
            themeVariables: {
              lineColor: 'rgb(var(--ctp-text))'
            },
            securityLevel: 'loose'
          });

          mermaid.contentLoaded();
        }
      }

      if (document.querySelector('.notes-body .mermaid')) {
        onLoadMermaid();
      }

      if (document.querySelector('.notes-body img')) {
        onLoadMedium();
      }

      if (!window.load_script) {
        window.load_script = true;
        const mediumScript = document.createElement('script');
        mediumScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/medium-zoom/1.1.0/medium-zoom.min.js';
        mediumScript.onload = onLoadMedium;
        const mermaidScript = document.createElement('script');
        mermaidScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mermaid/11.4.0/mermaid.min.js';
        mermaidScript.onload = onLoadMermaid;
        document.head.appendChild(mediumScript);
        document.head.appendChild(mermaidScript);
      }
    </script>
  </main>
</Layout>
